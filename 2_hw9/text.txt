1) Какие средства используются для организации межпроцессного взаимодействия?

Разделяемая память
Файлы, отображение в память
Ядро

2) Чем файлы, отображаемые в память, отличаются от разделяемой памяти?

Отличаются тем что части файла ставится в соответствие некоторый диапазон адресов. 
При этом чтение данных из этих адресов фактически приводит к чтению данных из отображенного файла,
а запись данных по этим адресам приводит к записи этих данных в файл.
Таким образом процессы работают только с этим диапазоном адресов. 

При использовании разделяемой памяти каждый процесс действует в своём виртуальном адресном пространстве, которое проецируется на общесистемное физическое
И благодаря этому разные процессы могут иметь разные адреса связанные с одной и той же ячейкой памяти. 

3) Что необходимо учитывать при создании контейнеров в разделяемой памяти?
При выделении памяти нужно использовать особые аллокаторы. Обычные не подходят. 

Для того чтобы отличить переменные от массива используется пара значений:
Указатель на первый элемент и количество элементов.(для переменной кол-во элементов равно единице) 

4) Чем отличаются анонимные и именованные примитивы синхронизации?

Анонимные примитивы находится в разделяемой памяти, а именованные связаны с операционной системой и используются если разделяемая память не нужна. 

5) Как могут быть использованы библиотеки динамической компоновки DLL?

Динамическая компоновка позволяет исполняемому файлу вызывать функции или методы класса и пользоваться ресурсами, хранящимися в отдельном файле. 
Эти функции и ресурсы можно компилировать и развертывать отдельно от использующих их исполняемых файлов.
Благодаря этому можно изменять DLL файлы сохраняя интерфейс функций. 
На основе этих возможностей выпускать патчи для приложений или игр заменяя DLL файлы.

