1) Прокомментируйте основные характеристики языка программирования C++
компиллируемый - исходный код на с++ транслируется в исполняемый файл .exe ,содержащий набор машинных инструкций.
мультипарадигменный - поддерживает больше чем одну парадигму программирования например: ООП и Функциональное программирование.
строгая статическая типизация - все переменные и возвращаемые значения функций связаны с типом в момент объявления и тип не может быть изменен позже.
поддержка высокоуровневых и низкоуровневых возможностей - высокоуровненвые: ооп, низкоуровненвые: работа с памятью.

2) Перечислите фундаментальные типы данных и укажите их особенности.
  bool 
true/false, 8 бит, поддерживает ||,&&, не нужно проверять с == в if
  char 
один символ, 8 бит, 256 символов (signed от 0 до 255 или unsigned от -127 до 128), wchar_t (для кодировок)
  int|short|long
целые числа 2,4,8 байт signed/unsigned(со вторым возникает зацикливание в for)
  float|double 
числа с плавающей точкой, по умолчания double, можно записать в научном формате 1.323e23
  void
отсутствие информации о типе, void func() - ничего не возвращает

(const-ключевое слово для создания констант)
3) Когда возникает проблема переносимости и как ее предотвратить?
Вторая часть таблицы ASCII может отличаться, поэтому стоит пользоваться тоолько первой.
Разные свойства типов на разных системах, решение - использовать псевдонимы
Разные диапазоны signed и unsigned проверить через std::is_signed<char>::value
4) Что такое определение, объявление, инициализация и присваивание?
 1.int a;
 2.int a; + доп. информация
 3. Первый раз
 4. a=5;


5) Почему выравнивание данных в памяти увеличивает производительность?
Это связанно с особенностями работы процессора. Он считывает данные группами по 4 байта.
Если данные не выровнены процессор вынужден считать блок данных, на который приходится невыровненный адрес,
сдвинуть полученные данные, считать следующий за ним блок данных,
в котором содержится оставшийся один байт интересующих нас данных,
сдвинуть полученные данные, объединить вместе с данными первого блока и поместить их в регистр,
т. е. проделать довольно большой объем работы, который уменьшает производительность.