1) Что обеспечивает идеальная передача и как она реализуется?
template<typename T>
void f(T && arg) 
{
    g(std::forward<T>(arg)); // Условное приведение к rvalue && (в отличие от move() где оно безусловно)
}
Идеальная передача обеспечивает сохранение следующих свойств:
Константность
Модифицируемость
Перемещаемость


2) Какая ссылка назвается пробрасывающей или универсальной?
T && arg - универсальная или пробрасывающая ссылка(forwarding)
где Т это тип который выводится компилятором
используется при идельной передаче


3) В чем заключается идиома SFINAE применительно к шаблонам?
SFINAE - substitution failure is not an error
Т.е. ошибка подстановки шаблона не является ошибкой
Поэтому вместо появления ошибки компиляции будет осуществляться поиск другой подходящей альтернативы.


4) Как можно использовать вспомогательный шаблон enable_if?
Если в определенной ситуации компилятор предпочитает конструктор (созданный шаблоном) который не предпочтителен для нас, то мы можем, воспользовавшись идиомой SFINAE,
запретить компилятору использовать не нужный нам конструктор (созданный шаблоном)
например:
template < typename T, typename Enable = std::enable_if_t < std::is_convertible_v < T, std::string > > >


5) Какие правила вывода применяются при работе с шаблонами?
правила свертывания:
&& &, & &&, & & -> &
&& && -> &&
правила вывода:
template < typename T >
void f(T & arg) {}
  // int x = 42;            T = int, arg - int &
  // const int cx = 42;     T = const int, arg - const int &
  // const int & lx = cx;   T = const int, arg - const int &

template < typename T >
void f(T && arg) {}
  // int x = 42;            T = int &, arg - int &
  // const int cx = 42;     T = const int &, arg - const int &
  // const int & lx = cx;   T = const int &, arg - const int &
  // f(42)                  T = int, arg - int &&
  // f(std::move(x))        T = int &&, arg - int &&

template < typename T >
void f(T arg) {}
  // Отбрасывается константность и ссылочность (передача по значению копированием)