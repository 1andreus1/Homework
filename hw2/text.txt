1) Из каких сегментов состоит структура памяти процесса?

Stack - небольшого размера, хранятся локальные объекты.
Free - свободная память.
Heap - большого размера, выделяется динамически.
Static - сегмент данных и кода, хранятся статические объекты.

2) Каким образом связаны встроенные указатели и массивы?

Массив задается ссылкой на первый элемент и количеством элементов в нем. Прибавляя к адресу первого элемента 1 мы получаем адрес следующего элемента.
Если прибавлять большее число, можно получить доступ к любому нужному элементу массива.

3) Почему низкоуровненвая работа с памятью небезопасна?

Низкоуровневая работа с памятью опасна тем, что если забыть очистить неиспользуемую память, то это может привести к утечке памяти.
Возможность изменить или очистить память, которая используется в других процессах. (Например  с помощью указателей).

4) Что такое ссылка и чем она отличается от указателя?

Ссылка - автоматически разыменуемый при константный указатель или по-другому альтернативное имя объекта (nullptr не поддерживается).
Безопасный вариант указателя.
Ссылка явлется альтернативным именем объекта (ее нужно не разыменовывать).
Не принимает значение nullptr.
Есть возможнось переназначать указатель много раз. Ссылка не поддерживает переназначение, так как она константная.

5) Какими способами можно передать данные в функцию?

По значению - приводит к копированию всех данных, наболее эффективно для небольших объектов меньше 8 байт.
По указателю - копируется только адрес, эффективно для больших  больше 8 байт объектов, усложненный синтаксис.
По ссылке - нет копирования, эффективно для больших больших 8 байт объектов, обычный синтаксис.
